version: "3"
services:
  app:
    restart: always
    image: grocerytime:latest
    container_name: grocerytime
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - database
    networks:
      - webproxy
      - default

  database:
    restart: always
    image: postgres:latest
    container_name: grocerytime_db
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - database_postgres:/var/lib/postgresql/data

  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"
    networks:
      - webproxy

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"
    networks:
      - webproxy
    depends_on:
      - nginx-proxy

volumes:
  app:
  database_postgres:

networks:
  webproxy:
